% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_func.R
\name{starn}
\alias{starn}
\title{Spatio-Temporal Attention Regression Network (STARN)}
\usage{
starn(
  formula,
  data,
  spat_matrix,
  time_col,
  loc_col,
  timesteps = 11,
  spat_embedding_dim = 10,
  time_method = "lstm",
  space_method = "attention",
  batch_size = 64,
  epochs = 100,
  validation_split = 0.2,
  n_iter = 100
)
}
\arguments{
\item{formula}{A formula specifying the response and predictors, e.g., \code{y ~ x1 + x2}.}

\item{data}{A data frame containing the spatio-temporal sensor data.}

\item{spat_matrix}{A spatial distance matrix between sensor locations (square and symmetric).}

\item{time_col}{Name of the column indicating temporal ordering (unquoted or quoted).}

\item{loc_col}{Name of the column indicating spatial location IDs (unquoted or quoted).}

\item{timesteps}{Length of the temporal window used to construct sequences for the LSTM model (default: 11).}

\item{spat_embedding_dim}{Dimension of the spatial embedding extracted via classical MDS (default: 10).}

\item{time_method}{Method used for temporal modeling (currently supports "lstm").}

\item{space_method}{Method used for spatial integration (currently supports "attention").}

\item{batch_size}{Training batch size (default: 64).}

\item{epochs}{Number of training epochs (default: 100).}

\item{validation_split}{Proportion of training data used for validation (default: 0.2).}

\item{n_iter}{Number of forward passes with dropout for uncertainty estimation (default: 100).}
}
\value{
A list with components:
\describe{
  \item{\code{model}}{The trained Keras model object.}
  \item{\code{history}}{Training history returned by Keras.}
  \item{\code{data}}{The input data frame augmented with predictions, prediction intervals, and anomaly indicators.}
}
}
\description{
Fits a deep learning spatio-temporal model using LSTM layers with attention mechanisms and spatial embeddings.
This model is designed for detecting anomalies in high-frequency sensor data by capturing both spatial
dependencies (via distance-based embeddings) and temporal dynamics (via recurrent layers with attention).
Uncertainty is quantified via Monte Carlo dropout during inference.
}
\details{
The function uses bidirectional LSTMs followed by an attention mechanism to extract temporal features,
and incorporates spatial information via embeddings obtained through classical multidimensional scaling (MDS).
Uncertainty is quantified using Monte Carlo dropout, and anomalies are flagged when observed values fall
outside the estimated 90% prediction interval.
}
\examples{
\dontrun{
# Load example data from package
obs_path <- system.file("extdata", "obs_data.RDS", package = "SSNbayes")
dm_path <- system.file("extdata", "Cov_mat.rds", package = "SSNbayes")

obs_data <- readRDS(obs_path)
dm <- readRDS(dm_path)
spat_matrix <- dm$H

# Fit the STARN model
fit_starn <- starn(
  formula = y_impute ~ X1 + X2 + X3,
  data = obs_data,
  time_col = 'date',
  loc_col = 'locID',
  spat_matrix = spat_matrix,
  timesteps = 11,
  time_method = "lstm",
  space_method = "attention",
  batch_size = 64,
  epochs = 5,
  validation_split = 0.2
)
}

}
\references{
Santos-Fernandez, E., et al. (2025). *New Bayesian and deep learning spatio-temporal models can reveal anomalies in sensor data more effectively*. (in review).
}
